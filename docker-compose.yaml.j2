
dyndns:
  image: jacobsanford/route53-dyndns
  environment:
    AWS_ACCESS_KEY_ID: {{ dyndns.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: {{ dyndns.AWS_SECRET_ACCESS_KEY }}
    AWS_CONNECTION_REGION: {{ dyndns.AWS_CONNECTION_REGION }}
    ROUTE53_DOMAIN_A_RECORD: {{ dyndns.ROUTE53_DOMAIN_A_RECORD }}
    ROUTE53_IP_URL: http://www.whatismypublicip.com/
    ROUTE53_UPDATE_FREQUENCY: 3600


nginx:
  image: nginx:alpine
  ports:
    - 80:80
    - 443:443
  volumes:
    - /docker/nginx/web:/var/www
    - /vagrant/conf/nginx_sites.conf:/etc/nginx/conf.d/default.conf:ro
    - /vagrant/conf/htpasswd:/etc/nginx/htpasswd:ro
    - /vagrant/secure/decrypted/ssl:/etc/ssl:ro
    - /docker/letsencrypt/etc/letsencrypt:/etc/letsencrypt:ro

wp:
  image: wordpress
  links:
  - wpdb:mysql
  ports:
  - 10080:80
  volumes:
  - /docker/wp/var/www/html:/var/www/html
  - /vagrant/conf/wordpress_uploads.ini:/usr/local/etc/php/conf.d/uploads.ini

wpdb:
  image: mariadb
  environment:
    MYSQL_ROOT_PASSWORD: {{ wpdb.MYSQL_ROOT_PASSWORD }}
  volumes:
    - /docker/wpdb/var/lib/mysql:/var/lib/mysql

caliwp:
  image: wordpress
  links:
  - caliwpdb:mysql
  ports:
  - 10081:80
  volumes:
  - /docker/caliwp/var/www/html:/var/www/html
  - /vagrant/conf/wordpress_uploads.ini:/usr/local/etc/php/conf.d/uploads.ini

caliwpdb:
  image: mariadb
  environment:
    MYSQL_ROOT_PASSWORD: {{ caliwpdb.MYSQL_ROOT_PASSWORD }}
  volumes:
    - /docker/caliwpdb/var/lib/mysql:/var/lib/mysql


git:
  image: rastasheep/ubuntu-sshd
  ports:
    - "2222:22"
  command: bash -c "apt-get update; apt-get install -y git; rm -f /etc/ssh/ssh_host_*; dpkg-reconfigure openssh-server; useradd git -m -G root -s /bin/bash -p '*'; mkdir -p /home/git/.ssh; cp /tmp/authorized_keys /home/git/.ssh/authorized_keys; chown -R git:git /home/git; echo 'git ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/git; /usr/sbin/sshd -D"
  volumes:
    - /docker/git/home/git:/home/git
    - /vagrant/conf/authorized_keys:/tmp/authorized_keys:ro


aptcacherng:
  image: minimum2scp/apt-cacher-ng
  ports:
    - "3142:3142"
# environment:
  # - ACNG_BACKENDS_DEBIAN=http://mirrors.us.kernel.org/debian/
  # - ACNG_BACKENDS_UBUNTU=http://mirrors.us.kernel.org/ubuntu/
#  volumes:
#    - /docker/aptcacherng/var/cache/apt-cacher-ng:/var/cache/apt-cacher-ng


registry: # docker registry
  image: registry:2
  ports:
  - 5000:5000
  volumes:
  - /docker/registry/var/lib/registry:/var/lib/registry


mongofax:
  image: mongo:latest
  restart: always
  volumes:
  - /docker/mongomax/data/configdb:/data/configdb
  - /docker/mongofax/data/db:/data/db

vaporfax:
  image: bludesign/vapor:latest
  restart: always
  ports:
  - "20080:8080"
  volumes:
  - /docker/vaporfax/FaxServer:/vapor
  environment:
  - MONGO_HOST=mongofax
  - MONGO_PORT=27017
  - VAPOR_HOST=0.0.0.0
  links:
  - mongofax


#####################################################################
# Notes

# plex:
#   # https://github.com/timhaak/docker-plex
#   image: timhaak/plex
#   ports:
#     - 32400:32400
#   volumes:
#     - /docker/plex/config:/config
#     - /autofs/media:/media
#
#   # After creation:
#   # sudo emacs /docker/plex/config/Library/Application\ Support/Plex\ Media\ Server/Preferences.xml
#   # Add:  allowedNetworks="192.168.3.0/255.255.255.0"


# restart only apt-cache and connect with bash
# export ID=`docker ps|grep apt-cacher |awk '{print $1}'`; docker stop $ID; docker rm $ID; make config; docker-compose up -d; sleep 1; export ID=`docker ps|grep apt-cacher |awk '{print $1}'`; docker exec -it $ID bash

